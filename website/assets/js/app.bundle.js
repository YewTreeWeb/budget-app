(window.webpackJsonp=window.webpackJsonp||[]).push([["app"],{0:function(e,t,n){e.exports=n("kFay")},1:function(e,t){},E4hX:function(e,t,n){(function(e,t){for(var n,o=function(){},c=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeline","timelineEnd","timeStamp","trace","warn"],a=c.length,s=window.console=window.console||{};a--;)s[n=c[a]]||(s[n]=o);window.addEventListener("keydown",(function e(t){9===t.keyCode&&(document.body.classList.add("user-is-tabbing"),window.removeEventListener("keydown",e))})),document.querySelector("html").setAttribute("data-browser",e.name);var l=document.querySelector("body");t({xlarge:["1281px","1680px"],large:["981px","1280px"],medium:["737px","980px"],small:["481px","736px"],xsmall:[null,"480px"]}),e.mobile?l.classList.add("is-mobile"):(t.on(">medium",(function(){l.classList.remove("is-mobile"),l.classList.add("is-desktop")})),t.on("<=medium",(function(){l.classList.remove("is-desktop"),l.classList.add("is-mobile")}))),"localhost"===window.location.hostname&&console.log("localhost detected!")}).call(this,n("txRt"),n("a6Qp"))},SEKM:function(e,t,n){"use strict";n.r(t);var o=n("lwsE"),c=n.n(o),a=n("W8MJ"),s=n.n(a),l=n("xVb/"),i=function(){function e(t,n,o){c()(this,e),this.inputType=t,this.inputDesc=n,this.inputVal=o}return s()(e,[{key:"getInput",value:function(){return{type:this.inputType.value,description:this.inputDesc.value,value:Number(this.inputVal.value)}}},{key:"formatNumber",value:function(e,t){var n=Math.abs(e);(n=n.toFixed(2)).split(".")}},{key:"render",value:function(e,t){var n,o="exp"===t?"expenses":"income",c=document.querySelector(".".concat(o,"__list"));n="\n    <li class='".concat(o,"__item' id='").concat(t,"-").concat(e.id,"'>\n      <div class='item-desc'><p>").concat(e.desc,"</p></div>\n      <div class=\"items\">\n        <div class='items__value'><p><span>&pound;</span>").concat(e.val,"</p></div>\n    "),"exp"===t&&(n+='<div class="items__percent"><p>0&#37;</p></div>'),n+='\n        <button class=\'btn btn--clear items__del\'>\n          <svg id="delete" class="icon" width="20" height="20" aria-hidden="true">\n            <use xlink:href="/assets/images/icons.svg#icon-delete"></use>\n          </svg>\n        </button>\n      </div>\n    </li>\n    ',c.innerHTML+=n}},{key:"getBudget",value:function(e){return{budget:e.budget,totalInc:e.totals.inc,totalExp:e.totals.exp,percent:e.percent}}},{key:"displayBudget",value:function(e){var t="exp"===(e.budget>0?"inc":"exp")?"expenses":"income",n=document.querySelector(".budget__value .budget"),o=document.querySelector(".budget__income .budget__amount .amount"),c=document.querySelector(".budget__expenses .budget__amount .amount");n.textContent=e.budget,o.textContent=e.totalInc,c.textContent=e.totalExp,console.log("The ".concat(t," is/are ").concat(e.budget)),console.log(o,c)}},{key:"displayPercentage",value:function(e){var t=document.querySelector(".percentage");e>0?(t.classList.add("show"),t.innerHTML="".concat(e,"&#37;")):t.classList.remove("show"),console.log(t)}},{key:"updateBudget",value:function(){var e=l.default.calculateBudget(),t=this.getBudget(e);console.log(t),this.displayBudget(t),this.displayPercentage(t.percent)}},{key:"displayPercentages",value:function(e){!function(e,t){for(var n=0;n<e.length;n++)t(e[n],n)}(document.querySelectorAll(".items__percent"),(function(t,n){e[n]>0?(t.classList.add("show"),t.innerHTML="".concat(e[n],"&#37;")):(t.classList.remove("show"),t.innerHTML="0&#37;")}))}},{key:"updatePercentages",value:function(){l.default.calculatePercentages();var e=l.default.getPercentages();this.displayPercentages(e)}},{key:"updateDate",value:function(){var e=document.querySelector(".budget__month"),t=dayjs("MMMM YYYY");e.textContent=t}},{key:"deleteItem",value:function(){var e=this;document.querySelector(".income-expenses").addEventListener("click",(function(t){if("delete"===t.target.id){var n=t.target.closest(".items").parentElement,o=n.id.split("-"),c=o[0],a=Number(o[1]);console.log(t.target,n,o,c,a),l.default.removeItem(c,a),n.remove(),e.updateBudget(),e.updatePercentages()}}))}}]),e}();t.default=i},a6Qp:function(e,t){e.exports=breakpoints},kFay:function(e,t,n){"use strict";n.r(t);var o=n("cDf5"),c=n.n(o),a=(n("OuUZ"),n("E4hX"),n("xVb/")),s=n("SEKM"),l=document.querySelector("body");window.onload=function(){window.setTimeout((function(){l.classList.remove("is-loading")}),100)};var i,u,r,d,p,m,g;i=a.default,u=document.querySelector(".add__form"),r=document.querySelector(".add__type"),d=document.querySelector(".add__description"),p=document.querySelector(".add__value"),m=document.querySelector("#check"),g=new s.default(r,d,p),r.addEventListener("change",(function(e){var t=Array.from(r.options);console.log(e),console.log(r.attributes,r.options,r.options.selectedIndex,t,t[1]),1===r.options.selectedIndex?(m.classList.add(r.value),t[0].removeAttribute("selected","selected"),t[1].setAttribute("selected","selected")):(t[1].removeAttribute("selected","selected"),t[0].setAttribute("selected","selected"),m.classList.remove("exp"))})),u.addEventListener("submit",(function(e){e.preventDefault();var t=g.getInput();if(console.log(t),console.log(c()(t.value)),u.reset(),""!==t.desc&&!isNaN(t.value)&&t.value>0){var n=i.addItem(t.type,t.description,t.value);g.render(n,t.type),g.updateBudget(),g.updatePercentages(),console.log("form submitted!"),console.log(n)}})),g.deleteItem()},txRt:function(e,t){e.exports=browser},"xVb/":function(e,t,n){"use strict";n.r(t);var o,c,a,s=n("cDf5"),l=n.n(s),i=n("lwsE"),u=n.n(i),r=n("W8MJ"),d=n.n(r),p=(o=function(){function e(t,n,o){u()(this,e),this.id=t,this.desc=n,this.val=o,this.percentage=-1}return d()(e,[{key:"calcPercentage",value:function(e){this.percentage=e>0?Math.round(this.val/e*100):-1,console.log("this value is ".concat(l()(this.val)),"the totalIncome ".concat(l()(e)))}},{key:"getPercentage",value:function(){return this.percentage}}]),e}(),c={allItems:{exp:[],inc:[]},totals:{exp:0,inc:0},budget:0},a=function(e){var t=0;c.allItems[e].forEach((function(e){t+=e.val})),c.totals[e]=t},{addItem:function(e,t,n){var a=c.allItems[e].length>0?c.allItems[e][c.allItems[e].length-1].id+1:0,s=new o(a,t,n);return c.allItems[e].push(s),s},calculateBudget:function(){return a("exp"),a("inc"),c.budget=c.totals.inc-c.totals.exp,c.totals.inc>0?c.percent=Math.round(c.totals.exp/c.totals.inc*100):c.percent=-1,console.log(c.totals.exp,c.totals.inc),console.log(c.budget,c.percent),c},calculatePercentages:function(){c.allItems.exp.forEach((function(e){e.calcPercentage(c.totals.inc)}))},getPercentages:function(){return c.allItems.exp.map((function(e){return e.getPercentage()}))},removeItem:function(e,t){var n=c.allItems[e].map((function(e){return e.id})).indexOf(t);-1!==n&&c.allItems[e].splice(n,1)}});t.default=p}},[[0,"runtime","vendors"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,