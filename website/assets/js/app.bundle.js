(window.webpackJsonp=window.webpackJsonp||[]).push([["app"],{"+4zn":function(e,t,n){"use strict";n.r(t);var a=n("o0o1"),s=n.n(a),o=n("yXPU"),c=n.n(o),i=n("lwsE"),l=n.n(i),u=n("W8MJ"),r=n.n(u),d=function(){function e(){l()(this,e),this.budgets=db.collection("budgets")}var t;return r()(e,[{key:"saveBudget",value:(t=c()(s.a.mark((function e(t,n,a,o){var c,i,l;return s.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return c=new Date,i={budget:t.budget,totalInc:t.totals.inc,totalExp:t.totals.exp,totalSav:t.totals.sav,percentExp:t.percent.exp,percentSav:t.percent.sav,allItems:{exp:[n],inc:[a],sav:[o]},created_at:firebase.firestore.Timestamp.fromDate(c)},e.next=4,this.budgets.add(i);case 4:return l=e.sent,e.abrupt("return",l);case 6:case"end":return e.stop()}}),e,this)}))),function(e,n,a,s){return t.apply(this,arguments)})},{key:"getBudget",value:function(e){this.budgets.orderBy("created_at").onSnapshot((function(t){t.docChanges().forEach((function(t){"added"===t.type&&e(t.doc.data(),t.doc.id)}))}))}}]),e}();t.default=d},0:function(e,t,n){e.exports=n("kFay")},1:function(e,t){},E4hX:function(e,t,n){(function(e,t){for(var n,a=function(){},s=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeline","timelineEnd","timeStamp","trace","warn"],o=s.length,c=window.console=window.console||{};o--;)c[n=s[o]]||(c[n]=a);window.addEventListener("keydown",(function e(t){9===t.keyCode&&(document.body.classList.add("user-is-tabbing"),window.removeEventListener("keydown",e))})),document.querySelector("html").setAttribute("data-browser",e.name);var i=document.querySelector("body");t({xlarge:["1281px","1680px"],large:["981px","1280px"],medium:["737px","980px"],small:["481px","736px"],xsmall:[null,"480px"]}),e.mobile?i.classList.add("is-mobile"):(t.on(">medium",(function(){i.classList.remove("is-mobile"),i.classList.add("is-desktop")})),t.on("<=medium",(function(){i.classList.remove("is-desktop"),i.classList.add("is-mobile")}))),"localhost"===window.location.hostname&&console.log("localhost detected!")}).call(this,n("txRt"),n("a6Qp"))},SEKM:function(e,t,n){"use strict";n.r(t);var a=n("lwsE"),s=n.n(a),o=n("W8MJ"),c=n.n(o),i=n("xVb/"),l=new(n("+4zn").default),u=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=Math.abs(e),o=(s=s.toFixed(2)).split("."),c=o[0],i=o[1];i=Number(i)>0?".".concat(i):"",c.length>3&&(c="".concat(c.substr(0,c.length-3),",").concat(c.substr(c.length-3,3)));var l=n?'<span class="currency">&pound;</span>':"";return"".concat(a?"exp"===t?'<span class="sign">&#45;</span> ':'<span class="sign">&#43;</span> ':"").concat(l).concat(c).concat(i)},r=function(){function e(t,n,a){s()(this,e),this.inputType=t,this.inputDesc=n,this.inputVal=a}return c()(e,[{key:"getInput",value:function(){return{type:this.inputType.value,description:this.inputDesc.value,value:Number(this.inputVal.value)}}},{key:"render",value:function(e,t){var n,a="exp"===t?"expenses":"sav"===t?"savings":"income",s=document.querySelector(".".concat(a,"__list"));n="\n    <li class='".concat(a,"__item' id='").concat(t,"-").concat(e.id,"'>\n      <div class='item-desc'><p>").concat(e.desc,"</p></div>\n      <div class=\"items\">\n        <div class='items__value'><p>").concat(u(e.val,t,!0,!1),"</p></div>\n    "),"exp"!==t&&"sav"!==t||(n+='<div class="items__percent"><p>0&#37;</p></div>'),n+='\n        <button class=\'btn btn--clear items__del\'>\n          <svg id="delete" class="icon" width="20" height="20" aria-hidden="true">\n            <use xlink:href="/assets/images/icons.svg#icon-delete"></use>\n          </svg>\n        </button>\n      </div>\n    </li>\n    ',s.innerHTML+=n}},{key:"getBudget",value:function(e){return{budget:e.budget,totalInc:e.totals.inc,totalExp:e.totals.exp,totalSav:e.totals.sav,percentExp:e.percent.exp,percentSav:e.percent.sav}}},{key:"displayBudget",value:function(e){var t=e.budget>0?"inc":"exp",n="exp"===t?"expenses":"income",a=document.querySelector(".budget__value"),s=document.querySelector(".budget__income .budget__amount"),o=document.querySelector(".budget__expenses .budget__amount"),c=document.querySelector(".budget__savings .budget__amount");a.innerHTML=u(e.budget,t,!0),s.innerHTML=u(e.totalInc,"inc"),o.innerHTML=u(e.totalExp,"exp"),c.innerHTML=u(e.totalSav,"exp"),console.log("The ".concat(n," is/are ").concat(e.budget)),console.log(s,o)}},{key:"displayPercentage",value:function(e,t){var n="exp"===t?"expenses":"savings",a=document.querySelector(".budget__".concat(n," .budget__percentage"));e>0?(a.classList.add("show"),a.innerHTML="".concat(e,"&#37;")):a.classList.remove("show"),console.log(a)}},{key:"updateBudget",value:function(){var e=i.default.calculateBudget(),t=this.getBudget(e);console.log(t),this.displayBudget(t),this.displayPercentage(t.percentExp,"exp"),this.displayPercentage(t.percentSav,"sav")}},{key:"displayPercentages",value:function(e,t){var n="exp"===t?"expenses":"savings";!function(e,t){for(var n=0;n<e.length;n++)t(e[n],n)}(document.querySelectorAll(".".concat(n," .items__percent")),(function(t,n){e[n]>0?(t.classList.add("show"),t.innerHTML="".concat(e[n],"&#37;")):(t.classList.remove("show"),t.innerHTML="0&#37;")}))}},{key:"updatePercentages",value:function(){i.default.calculatePercentages(this.inputType.value);var e=i.default.getPercentages(this.inputType.value);this.displayPercentages(e,this.inputType.value)}},{key:"displayDate",value:function(){var e=document.querySelector(".budget__date"),t=new Date;e.textContent="".concat(["January","February","March","April","May","June","July","August","Sepetember","October","November","December"][t.getMonth()]," ").concat(t.getFullYear())}},{key:"changeType",value:function(){var e=this.inputType,t=document.querySelector("#check");e.addEventListener("change",(function(n){var a=Array.from(e.options);console.log(n),console.log(e.attributes,e.options,e.options.selectedIndex,a,a[1]),a.forEach((function(e){e.selected?(e.setAttribute("selected","selected"),t.classList.remove("exp","sav"),"exp"===e.value?t.classList.add("exp"):"sav"===e.value&&t.classList.add("sav")):e.removeAttribute("selected","selected"),console.log("Value ".concat(e.value))}))}))}},{key:"deleteItem",value:function(){var e=this;document.querySelector(".income-expenses").addEventListener("click",(function(t){if("delete"===t.target.id){var n=t.target.closest(".items").parentElement,a=n.id.split("-"),s=a[0],o=Number(a[1]);console.log(t.target,n,a,s,o),i.default.removeItem(s,o),n.remove(),e.updateBudget(),e.updatePercentages()}}))}},{key:"saving",value:function(){var e=document.querySelector("#save"),t=i.default.calculateBudget(),n=this.getBudget(t);e.addEventListener("click",(function(){l.saveBudget(n).then((function(){console.log("saved")})).catch((function(e){console.error(e)}))}))}}]),e}();t.default=r},a6Qp:function(e,t){e.exports=breakpoints},kFay:function(e,t,n){"use strict";n.r(t);var a=n("cDf5"),s=n.n(a),o=(n("OuUZ"),n("E4hX"),n("xVb/")),c=n("SEKM"),i=document.querySelector("body");window.onload=function(){window.setTimeout((function(){i.classList.remove("is-loading")}),100)};var l,u,r,d,p,v;l=o.default,u=document.querySelector(".add__form"),r=document.querySelector(".add__type"),d=document.querySelector(".add__description"),p=document.querySelector(".add__value"),(v=new c.default(r,d,p)).displayDate(),v.changeType(),l.testing(),u.addEventListener("submit",(function(e){e.preventDefault();var t=v.getInput();if(console.log(t),console.log(s()(t.value)),u.reset(),""!==t.desc&&!isNaN(t.value)&&t.value>0){var n=l.addItem(t.type,t.description,t.value);v.render(n,t.type),v.updateBudget(),v.updatePercentages(),console.log("form submitted!"),console.log(n)}l.testing()})),v.deleteItem()},txRt:function(e,t){e.exports=browser},"xVb/":function(e,t,n){"use strict";n.r(t);var a,s,o,c=n("cDf5"),i=n.n(c),l=n("lwsE"),u=n.n(l),r=n("W8MJ"),d=n.n(r),p=(a=function(){function e(t,n,a){u()(this,e),this.id=t,this.desc=n,this.val=a,this.percentage=-1}return d()(e,[{key:"calcPercentage",value:function(e){this.percentage=e>0?Math.round(this.val/e*100):-1,console.log("this value is ".concat(i()(this.val)),"the totalIncome ".concat(i()(e)))}},{key:"getPercentage",value:function(){return this.percentage}}]),e}(),s={allItems:{exp:[],inc:[],sav:[]},totals:{exp:0,inc:0,sav:0},percent:{exp:-1,sav:-1},budget:0},o=function(e){var t=0;s.allItems[e].forEach((function(e){t+=e.val})),s.totals[e]=t},{addItem:function(e,t,n){var o=s.allItems[e].length>0?s.allItems[e][s.allItems[e].length-1].id+1:0,c=new a(o,t,n);return s.allItems[e].push(c),c},calculateBudget:function(){return o("exp"),o("inc"),o("sav"),s.budget=s.totals.inc-(s.totals.exp+s.totals.sav),s.totals.inc>0?(s.percent.exp=Math.round(s.totals.exp/s.totals.inc*100),s.percent.sav=Math.round(s.totals.sav/s.totals.inc*100)):(s.percent.exp=-1,s.percent.sav=-1),console.log(s.totals.exp,s.totals.inc),console.log(s.budget,s.percent.exp,s.percent.sav),s},calculatePercentages:function(e){s.allItems[e].forEach((function(e){e.calcPercentage(s.totals.inc)}))},getPercentages:function(e){return s.allItems[e].map((function(e){return e.getPercentage()}))},removeItem:function(e,t){var n=s.allItems[e].map((function(e){return e.id})).indexOf(t);-1!==n&&s.allItems[e].splice(n,1)},testing:function(){console.log(s.allItems)}});t.default=p}},[[0,"runtime","vendors"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,